[
  {
    "theorem": "zero_add",
    "NL": "-- Theorem Declaration: Prove that 0 + n = n for all natural numbers",
    "FL": "theorem zero_add (n : \u2115) : 0 + n = n := by",
    "state": "n : \u2115\n\u22a2 0 + n = n\n"
  },
  {
    "theorem": "zero_add",
    "NL": "-- Induct on n, with d = 0 as the base case and the inductive hypothesis 0 + d = d. There are now two proof goals, prove base case: 0 + 0 = 0, and inductive step: 0 + succ (d) = succ (d)",
    "FL": "induction n with d hd",
    "state": "case zero\n\u22a2 0 + 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add",
    "NL": "-- First prove base case. Reduce LHS 0 + 0 = 0.",
    "FL": "rw [add_zero]",
    "state": "case zero\n\u22a2 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add",
    "NL": "-- Prove LHS and RHS are equal, 0 = 0, completing base case",
    "FL": "rfl",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add",
    "NL": "-- Now prove inductive step. Rewrite 0 + succ d = succ (0 + d)",
    "FL": "rw [add_succ]",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 succ (0 + d) = succ d\n"
  },
  {
    "theorem": "zero_add",
    "NL": "-- Simplify RHS succ (0 + d) = succ(d) using the inductive hypothesis.",
    "FL": "rw [hd]",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 succ d = succ d\n"
  },
  {
    "theorem": "zero_add",
    "NL": "-- Prove LHS and RHS are equal, succ(d) = succ(d), completing the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- Theorem Declaration: Prove that 0 + n = n for all natural numbers",
    "FL": "theorem zero_add_persona_1_d (n : \u2115) : 0 + n = n := by",
    "state": "n : \u2115\n\u22a2 0 + n = n\n"
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- Induct on n",
    "FL": "induction n with d hd",
    "state": "case zero\n\u22a2 0 + 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- substitute 0 -> 0 + 0 into the RHS giving us 0 + 0 = 0 + 0",
    "FL": "nth_rewrite 3 [\u2190 add_zero 0]",
    "state": "case zero\n\u22a2 0 + 0 = 0 + 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- 0 + 0 = 0 + 0, completing base case",
    "FL": "rfl",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- 0 + succ d -> succ (0 + d) on LHS giving us succ (0 + d) = succ d",
    "FL": "rw [add_succ]",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 succ (0 + d) = succ d\n"
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- 0 + d -> d on LHS -> succ d = succ d",
    "FL": "rw [hd]",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_1_d",
    "NL": "-- succ d = succ d, QED",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Theorem Declaration: Prove that 0 + n = n for all natural numbers",
    "FL": "theorem zero_add_persona_2 (n : \u2115) : 0 + n = n := by",
    "state": "n : \u2115\n\u22a2 0 + n = n\n"
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Begin by initiating induction on n",
    "FL": "induction n with d hd",
    "state": "case zero\n\u22a2 0 + 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Using the properties of addition by 0 we can rewrite 0 + 0 to 0 on the LHS",
    "FL": "rw [add_zero]",
    "state": "case zero\n\u22a2 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Since both sides are equal, we are done with the base case",
    "FL": "rfl",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Now using properties of successors we can rewrite 0 + succ d to succ (0 + d) on the LHS getting succ (0 + d) = succ d",
    "FL": "rw [add_succ]",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 succ (0 + d) = succ d\n"
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Using the induction hypothesis we can rewrite succ (0 + d) to succ d",
    "FL": "rw [hd]",
    "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 succ d = succ d\n"
  },
  {
    "theorem": "zero_add_persona_2",
    "NL": "-- Since both sides are equal, we are done with the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "succ_add",
    "NL": "-- Theorem Declaration: Prove that succ (a) + b  = succ (a + b) for all natural numbers",
    "FL": "theorem succ_add (a b : \u2115) : succ a + b = succ (a + b)  := by",
    "state": "a b : \u2115\n\u22a2 succ a + b = succ (a + b)\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Induct on b, with d = 0 as the base case and the inductive hypothesis succ (a) + d = succ (a + d). There are now two proof goals, prove base case: succ (a) + 0 = succ (a + 0) and inductive step: succ (a) + succ (d) = succ (a + succ (d))",
    "FL": "induction b with d hd",
    "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = succ (a + 0)\ncase succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ a + succ d = succ (a + succ d)\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- First prove base case. Reduce LHS succ (a) + 0 = succ (a)",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = succ (a + 0)\ncase succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ a + succ d = succ (a + succ d)\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Reduce RHS succ(a + 0) = succ (a)",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = succ a\ncase succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ a + succ d = succ (a + succ d)\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Prove succ (a) = succ (a), finishing the base case",
    "FL": "rfl",
    "state": "case succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ a + succ d = succ (a + succ d)\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Now prove the inductive step. Rewrite succ (a) + succ (d) = succ (succ a + d)",
    "FL": "rw [add_succ]",
    "state": "case succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ (succ a + d) = succ (a + succ d)\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Rewrite succ (a + succ d) = succ (succ (a + d))",
    "FL": "rw [add_succ]",
    "state": "case succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ (succ a + d) = succ (succ (a + d))\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Rewrite RHS succ (succ a + d) to succ (succ (a + d)) using the inductive hypothesis",
    "FL": "rw [hd]",
    "state": "case succ\na d : \u2115\nhd : succ a + d = succ (a + d)\n\u22a2 succ (succ (a + d)) = succ (succ (a + d))\n"
  },
  {
    "theorem": "succ_add",
    "NL": "-- Prove succ (succ (a + d)) = succ (succ (a + d)), completing the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, that is a + b + c = a + (b + c).",
    "FL": "theorem succ_add_persona_1_d (a b : \u2115) : succ a + b = succ (a + b) := by",
    "state": "a b : \u2115\n\u22a2 succ a + b = succ (a + b)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- Initiate induction on b",
    "FL": "induction b with n hn",
    "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- succ(a) + 0 -> succ(a) on LHS giving us succ(a) = succ(a+0)",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- a + 0 -> a on RHS giving us succ(a) = succ(a)",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = succ a\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- succ(a) = succ(a), Hence we are done with the base case",
    "FL": "rfl",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- Now for the induction case. succ(a) + succ(n) -> succ(succ(a) + n) on LHS giving us succ(succ(a) + n) = succ(a + succ(n))",
    "FL": "rw [add_succ]",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- a + succ(n) -> succ(a + n) on RHS giving us succ(succ(a) + n) = succ(succ(a + n))",
    "FL": "rw [add_succ]",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (succ (a + n))\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- using induction hypothesis, succ(a + n) -> succ(a) + n on RHS. Hence we get succ(succ(a) + n) = succ(succ(a) + n)",
    "FL": "rw [\u2190 hn]",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (succ a + n)\n"
  },
  {
    "theorem": "succ_add_persona_1_d",
    "NL": "-- succ(succ(a) + n) = succ(succ(a) + n), QED",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, that is a + b + c = a + (b + c).",
    "FL": "theorem succ_add_persona_2_d (a b : \u2115) : succ a + b = succ (a + b)  := by",
    "state": "a b : \u2115\n\u22a2 succ a + b = succ (a + b)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Initiate induction on b.",
    "FL": "induction b with n hn",
    "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- We start by proving the base case using properties of succession, succ(a+0) = a + succ(0) on RHS",
    "FL": "rw [\u2190 add_succ]",
    "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = a + succ 0\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Now using properties of addition by 0, we can rewrite succ(a) + 0 to succ(a) on the LHS",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = a + succ 0\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Now using properties of succession, we can rewrite succ(a) + 0 to succ(a+0) on the RHS",
    "FL": "rw [add_succ]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Now using properties of addition by 0, we can rewrite a + 0 to a on the RHS",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 succ a = succ a\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- since succ(a) = succ(a), we are done with the base case",
    "FL": "rfl",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Now to prove the induction case, we use properties of succession substituting succ(a) + succ(n) = succ(succ(a) + n) on LHS",
    "FL": "rw [add_succ]",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (a + succ n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Now again using properties of succession, we substitute succ(a + succ(n)) to succ(succ(a + n)) on the RHS",
    "FL": "rw [add_succ]",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (succ (a + n))\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- Using the induction hypothesis giving us succ(succ(a) + n) = succ(succ(a) + n) on the LHS",
    "FL": "rw [\u2190 hn]",
    "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (succ a + n)\n"
  },
  {
    "theorem": "succ_add_persona_2_d",
    "NL": "-- both sides are equal, hence we are done",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_comm",
    "NL": "-- Theorem Declaration: Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
    "FL": "theorem add_comm (a b : \u2115) : a + b = b + a := by",
    "state": "a b : \u2115\n\u22a2 a + b = b + a\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Induct on b, with d = 0 as the base case and the inductive hypothesis a + d = d + a. There are now two proof goals, prove base case: a + 0 = 0 + a and the inductive step: a + succ d = succ d + a",
    "FL": "induction b with d hd",
    "state": "case zero\na : \u2115\n\u22a2 a + 0 = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- First prove base case. Simplify LHS a + 0 = a.",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 a = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Simplify RHS 0 + a = a",
    "FL": "rw [zero_add]",
    "state": "case zero\na : \u2115\n\u22a2 a = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Prove LHS and RHS are equal, a = a, completing the base case.",
    "FL": "rfl",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Now prove the inductive step. Rewrite LHS a + succ (d) = succ (a + d)",
    "FL": "rw [add_succ]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ d + a\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Rewrite RHS succ (d) + a = succ (d + a)",
    "FL": "rw [succ_add]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ (d + a)\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Rewrite LHS succ (a + d) to succ (d + a) using the inductive hypothesis",
    "FL": "rw [hd]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (d + a) = succ (d + a)\n"
  },
  {
    "theorem": "add_comm",
    "NL": "-- Prove succ LHS and RHS are equal, (d + a) = succ (d + a), completing the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- Theorem Declaration: Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
    "FL": "theorem add_comm_persona_1_d (a b : \u2115) : a + b = b + a := by",
    "state": "a b : \u2115\n\u22a2 a + b = b + a\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- Start by inducting on b",
    "FL": "induction b with d hd",
    "state": "case zero\na : \u2115\n\u22a2 a + 0 = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- 0 + a -> a on RHS giving us a + 0 = a",
    "FL": "rw [zero_add]",
    "state": "case zero\na : \u2115\n\u22a2 a + 0 = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "--  a + 0 -> a into the LHS to get a = a",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 a = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- a=a, we are done with the base case",
    "FL": "rfl",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- a + succ d -> succ (a + d) on LHS giving us succ (a + d) = succ (d + a) on LHS",
    "FL": "rw [add_succ]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- succ d + a -> succ (d + a) on RHS giving us succ (a + d) = succ (d + a) on RHS",
    "FL": "rw [succ_add]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ (d + a)\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- using the induction hypothesis, succ (a + d) -> succ (d + a) on the LHS giving us succ (d + a) = succ (d + a)",
    "FL": "rw [hd]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (d + a) = succ (d + a)\n"
  },
  {
    "theorem": "add_comm_persona_1_d",
    "NL": "-- succ (n + a) = succ (n + a), we are done.",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- Theorem Declaration: Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
    "FL": "theorem add_comm_persona_2_d (a b : \u2115) : a + b = b + a := by",
    "state": "a b : \u2115\n\u22a2 a + b = b + a\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- Start by inducting on b",
    "FL": "induction b with d hd",
    "state": "case zero\na : \u2115\n\u22a2 a + 0 = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- We start with the base case. using properties of addition by 0 we can rewrite a + 0 to a on the LHS",
    "FL": "rw [add_zero]",
    "state": "case zero\na : \u2115\n\u22a2 a = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- using properties of addition by 0 we can rewrite 0 + a to a on the RHS",
    "FL": "rw [zero_add]",
    "state": "case zero\na : \u2115\n\u22a2 a = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- since both sides are equal, we are done with the base case",
    "FL": "rfl",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- Now to the (n+1) step. using properties of successors, succ (n) + a -> succ (n + a) and substitute this into the RHS",
    "FL": "rw [succ_add]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ (d + a)\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- using properties of succession, we substitute a + succ(n) -> succ(a+n) on the RHS",
    "FL": "rw [add_succ]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ (d + a)\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- Use the induction hypothesis on the LHS to substitute succ (a + n) -> succ (n + a)",
    "FL": "rw [hd]",
    "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (d + a) = succ (d + a)\n"
  },
  {
    "theorem": "add_comm_persona_2_d",
    "NL": "-- since both sides are equal, we are done with the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
    "FL": "theorem add_assoc (a b c : \u2115) : a + b + c = a + (b + c) := by",
    "state": "a b c : \u2115\n\u22a2 a + b + c = a + (b + c)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Induct on c, with d = 0 as the base case and the inductive hypothesis a + b + d = a + (b + d). There are now two proof goals, prove base case: a + b + 0 = a + (b + 0), and inductive step: a + b + succ (d) = a + (b + succ (d))",
    "FL": "induction c with d hd",
    "state": "case zero\na b : \u2115\n\u22a2 a + b + 0 = a + (b + 0)\ncase succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 a + b + succ d = a + (b + succ d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- First prove base case. Simplify LHS a + b + 0 = a + b",
    "FL": "rw [add_zero]",
    "state": "case zero\na b : \u2115\n\u22a2 a + b = a + (b + 0)\ncase succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 a + b + succ d = a + (b + succ d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Reduce RHS a + (b + 0) to a + b",
    "FL": "rw [add_zero]",
    "state": "case zero\na b : \u2115\n\u22a2 a + b = a + b\ncase succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 a + b + succ d = a + (b + succ d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Prove LHS and RHS are equal, a + b = a + b, completing the base case.",
    "FL": "rfl",
    "state": "case succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 a + b + succ d = a + (b + succ d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Now prove the inductive step. Rewrite the LHS expression a + b + succ d to succ (a + b + d)",
    "FL": "rw [add_succ]",
    "state": "case succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 succ (a + b + d) = a + (b + succ d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Rewrite RHS a + (b + succ d) to a + succ (b + d)",
    "FL": "rw [add_succ]",
    "state": "case succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 succ (a + b + d) = a + succ (b + d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Use the inductive hypothesis to rewrite the left-hand side, changing succ (a + b + d) to succ (a + (b + d))",
    "FL": "rw [hd]",
    "state": "case succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 succ (a + (b + d)) = a + succ (b + d)\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "--  Rewrite the RHS, a + succ (b + d) to succ (a + (b + d))",
    "FL": "rw [add_succ]",
    "state": "case succ\na b d : \u2115\nhd : a + b + d = a + (b + d)\n\u22a2 succ (a + (b + d)) = succ (a + (b + d))\n"
  },
  {
    "theorem": "add_assoc",
    "NL": "-- Prove LHS and RHS are equal, succ (a + (b + d)) = succ (a + (b + d)), completing the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
    "FL": "theorem add_assoc_persona_1_d (a b c : \u2115) : a + b + c = a + (b + c) := by",
    "state": "a b c : \u2115\n\u22a2 a + b + c = a + (b + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- intiate induction on b",
    "FL": "induction b with d hd",
    "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + (0 + c)\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- We rewrite on the RHS 0 + c -> c to get a + 0 + c = a + c",
    "FL": "rw [zero_add]",
    "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- We rewrite on the LHS a + 0 -> a to get a + c = a + c",
    "FL": "rw [add_zero]",
    "state": "case zero\na c : \u2115\n\u22a2 a + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- a + c = a + c, completing the base case.",
    "FL": "rfl",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- Now prove the inductive step.  a + succ d -> succ (a + d) giving us succ (a + d) + c = a + (succ d + c)",
    "FL": "rw [add_succ]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d) + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- Now on the LHS we write succ(a + d) + c -> succ(a + d + c). This gives us succ (a + d + c) = a + succ (d + c)",
    "FL": "rw [succ_add]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d + c) = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- Now we use the inductive hypothesis on LHS (a + d + c) -> a + (d + c) to get succ(a + (d + c)) = a + succ (d + c)",
    "FL": "rw [hd]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "--  Rewrite the RHS, succ (d) + c -> succ(d + c), to get succ (a + (d + c)) = a + succ (d + c)",
    "FL": "rw [succ_add]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = a + succ (d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- Rewrite on RHS, a + succ (d + c) -> succ (a + (d + c)) to get succ (a + (d + c)) = succ (a + (d + c))",
    "FL": "rw [add_succ]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = succ (a + (d + c))\n"
  },
  {
    "theorem": "add_assoc_persona_1_d",
    "NL": "-- succ (a + (d + c)) = succ (a + (d + c)), QED",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
    "FL": "theorem add_assoc_persona_2_d (a b c : \u2115) : a + b + c = a + (b + c) := by",
    "state": "a b c : \u2115\n\u22a2 a + b + c = a + (b + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- Induct on b",
    "FL": "induction b with d hd",
    "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + (0 + c)\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- First prove base case. we use properties of addition by 0 to rewrite 0 + c to c on the RHS",
    "FL": "rw [zero_add]",
    "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- using properties of addition by 0 we can rewrite a + 0 to a on the LHS",
    "FL": "rw [add_zero]",
    "state": "case zero\na c : \u2115\n\u22a2 a + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- both sides are equal, hence we are done with the base case",
    "FL": "rfl",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- Now for the inductive case. we use properties of succession to rewrite (succ n + c) to succ (n + c) on the RHS",
    "FL": "rw [succ_add]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + succ (d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- Now using properties of succession we rewrite a + succ n to succ (a + n) on the LHS",
    "FL": "rw [add_succ]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d) + c = a + succ (d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "--  Again using properties of succession we rewrite succ (a + n) + c to succ (a + n + c) on the LHS",
    "FL": "rw [succ_add]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d + c) = a + succ (d + c)\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- Again using properties of succession we rewrite a + succ(n + c) to succ(a + (n + c)) on the RHS",
    "FL": "rw [add_succ]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d + c) = succ (a + (d + c))\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- Using the induction hypothesis we rewrite succ(a + n + c) to succ(a + (n + c)) on the LHS",
    "FL": "rw [hd]",
    "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = succ (a + (d + c))\n"
  },
  {
    "theorem": "add_assoc_persona_2_d",
    "NL": "-- both sides are equal, hence we are done with the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_right_comm",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
    "FL": "theorem add_right_comm (a b c : \u2115) : a + b + c = a + c + b := by",
    "state": "a b c : \u2115\n\u22a2 a + b + c = a + c + b\n"
  },
  {
    "theorem": "add_right_comm",
    "NL": "-- Apply the associative property of addition to rewrite the LHS of the equation, changing a + b + c to a + (b + c)",
    "FL": "rw [add_assoc]",
    "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + c + b\n"
  },
  {
    "theorem": "add_right_comm",
    "NL": "-- Rewrite the LHS of the equation by applying the commutative property of addition to b and c, LHS is now a + (c + b)",
    "FL": "rw [add_comm b c]",
    "state": "a b c : \u2115\n\u22a2 a + (c + b) = a + c + b\n"
  },
  {
    "theorem": "add_right_comm",
    "NL": "-- Rewrite the RHS using the associative property: a + c + b to a + (c + b).",
    "FL": "rw [add_assoc]",
    "state": "a b c : \u2115\n\u22a2 a + (c + b) = a + (c + b)\n"
  },
  {
    "theorem": "add_right_comm",
    "NL": "-- Prove LHS and RHS are equal, a + (c + b) = a + (c + b), completing the proof",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_right_comm_persona_1_d",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
    "FL": "theorem add_right_comm_persona_1_d (a b c : \u2115) : a + b + c = a + c + b := by",
    "state": "a b c : \u2115\n\u22a2 a + b + c = a + c + b\n"
  },
  {
    "theorem": "add_right_comm_persona_1_d",
    "NL": "-- a + b + c -> a + (b + c) on the LHS giving us a + (b + c) = a + c + b",
    "FL": "rw [add_assoc]",
    "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + c + b\n"
  },
  {
    "theorem": "add_right_comm_persona_1_d",
    "NL": "-- a + c + b -> a + (c + b) on the RHS giving us a + (b + c) = a + (c + b)",
    "FL": "rw [add_assoc]",
    "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + (c + b)\n"
  },
  {
    "theorem": "add_right_comm_persona_1_d",
    "NL": "-- b + c -> c + b on the LHS giving us a + (c + b) = a + (c + b)",
    "FL": "rw [add_comm b c]",
    "state": "a b c : \u2115\n\u22a2 a + (c + b) = a + (c + b)\n"
  },
  {
    "theorem": "add_right_comm_persona_1_d",
    "NL": "-- a + (c + b) = a + (c + b), QED",
    "FL": "rfl",
    "state": ""
  },
  {
    "theorem": "add_right_comm_persona_2_d",
    "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
    "FL": "theorem add_right_comm_persona_2_d (a b c : \u2115) : a + b + c = a + c + b := by",
    "state": "a b c : \u2115\n\u22a2 a + b + c = a + c + b\n"
  },
  {
    "theorem": "add_right_comm_persona_2_d",
    "NL": "-- Apply the associative property of addition to rewrite the LHS: a + b + c to a + (b + c).",
    "FL": "rw [add_assoc]",
    "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + c + b\n"
  },
  {
    "theorem": "add_right_comm_persona_2_d",
    "NL": "-- Write the RHS using the associative property: a + c + b to a + (c + b).",
    "FL": "rw [add_assoc]",
    "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + (c + b)\n"
  },
  {
    "theorem": "add_right_comm_persona_2_d",
    "NL": "-- use the commutative property of addition to rewrite c + b to b + c on the RHS, a + (b + c) = a + (b + c)",
    "FL": "rw [add_comm c b]",
    "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + (b + c)\n"
  },
  {
    "theorem": "add_right_comm_persona_2_d",
    "NL": "-- since both sides are equal, we are done with the proof",
    "FL": "rfl",
    "state": ""
  }
]