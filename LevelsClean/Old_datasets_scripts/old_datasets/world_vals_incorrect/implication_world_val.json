{
    "exact_1": {},
    "exact_2": {
        "exact_2_dev_1": [{
            "theorem": "exact_2_dev_1",
            "NL": "-- Theorem Declaration: For some x which is a natural number, given that  0 + x = 0 + y + 2, prove x = y + 2",
            "FL": "theorem exact_2_dev_1 (x : \u2115) (h : 0 + x = 0 + y + 2) : x = y + 2 := by",
            "state": "y x : \u2115\nh : 0 + x = 0 + y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }, {
            "theorem": "exact_2_dev_1",
            "NL": "-- We simplify the hypothesis of 0 + x = 0 + y + 2 to x = 0 + x + 2.",
            "FL": "rw [zero_add] at h",
            "state": "y x : \u2115\nh : x = 0 + y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }, {
            "theorem": "exact_2_dev_1",
            "NL": "-- So, x = y + 2, which is exactly what we wanted to prove.",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "exact_2_dev_2": [{
            "theorem": "exact_2_dev_2",
            "NL": "-- Theorem Declaration: For some x which is a natural number, given that  0 + x = 0 + y + 2, prove x = y + 2",
            "FL": "theorem exact_2_dev_2 (x : \u2115) (h : 0 + x = 0 + y + 2) : x = y + 2 := by",
            "state": "y x : \u2115\nh : 0 + x = 0 + y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }, {
            "theorem": "exact_2_dev_2",
            "NL": "-- 0 + x = 0 + y + 2 -> x = 0 + y + 2",
            "FL": "rw [zero_add] at h",
            "state": "y x : \u2115\nh : x = 0 + y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }, {
            "theorem": "exact_2_dev_2",
            "NL": "-- x = y + 2",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    },
    "exact_3": {
        "exact_3_dev_1": [{
            "theorem": "exact_3_dev_1",
            "NL": "-- Theorem Declaration: For some x which is a natural number, given that  0 + x = 0 + y + 2, prove x = y + 2",
            "FL": "theorem exact_3_dev_1 (x : \u2115) (h : 0 + x = 0 + y + 2) : x = y + 2 := by",
            "state": "y x : \u2115\nh : 0 + x = 0 + y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }, {
            "theorem": "exact_3_dev_1",
            "NL": "-- Simplify 0 + x = 0 + y + 2 to x = y + 2",
            "FL": "repeat rw [zero_add] at h",
            "state": "y x : \u2115\nh : x = y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }],
        "exact_3_dev_2": [{
            "theorem": "exact_3_dev_2",
            "NL": "-- Theorem Declaration: For some x which is a natural number, given that  0 + x = 0 + y + 2, prove x = y + 2",
            "FL": "theorem exact_3_dev_2 (x : \u2115) (h : 0 + x = 0 + y + 2) : x = y + 2 := by",
            "state": "y x : \u2115\nh : 0 + x = 0 + y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }, {
            "theorem": "exact_3_dev_2",
            "NL": "-- 0 + x = 0 + y + 2 -> x = y + 2",
            "FL": "repeat rw [zero_add] at h",
            "state": "y x : \u2115\nh : x = y + 2\n\u22a2 x = y + 2\n",
            "is_correct": true
        }]
    },
    "exact_4": {
        "exact_4_dev_1": [{
            "theorem": "exact_4_dev_1",
            "NL": "-- Theorem Declaration: For some x and y which are natural numbers, given that  x = 37 and that x = 37 implied y = 42, prove y = 42",
            "FL": "theorem exact_4_dev_1 (x y : \u2115) (h1 : x = 37) (h2 : x = 37 \u2192 y = 42) : y = 42 := by",
            "state": "x y : \u2115\nh1 : x = 37\nh2 : x = 37 \u2192 y = 42\n\u22a2 y = 42\n",
            "is_correct": true
        }, {
            "theorem": "exact_4_dev_1",
            "NL": "-- x = 37 \u2192 y = 42 and x = 37, so by modus ponens, y = 42.",
            "FL": "apply h2 at h1",
            "state": "x y : \u2115\nh2 : x = 37 \u2192 y = 42\nh1 : y = 42\n\u22a2 y = 42\n",
            "is_correct": true
        }],
        "exact_4_dev_2": [{
            "theorem": "exact_4_dev_2",
            "NL": "-- Theorem Declaration: For some x and y which are natural numbers, given that  x = 37 and that x = 37 implied y = 42, prove y = 42",
            "FL": "theorem exact_4_dev_2 (x y : \u2115) (h1 : x = 37) (h2 : x = 37 \u2192 y = 42) : y = 42 := by",
            "state": "x y : \u2115\nh1 : x = 37\nh2 : x = 37 \u2192 y = 42\n\u22a2 y = 42\n",
            "is_correct": true
        }, {
            "theorem": "exact_4_dev_2",
            "NL": "-- x = 37, x = 37 -> y = 42 => y = 42",
            "FL": "apply h2 at h1",
            "state": "x y : \u2115\nh2 : x = 37 \u2192 y = 42\nh1 : y = 42\n\u22a2 y = 42\n",
            "is_correct": true
        }]
    },
    "exact_5": {
        "exact_5_dev_1": [{
            "theorem": "exact_5_dev_1",
            "NL": "-- Theorem Declaration: For some x which is a natural number, given x + 1 = 4, prove that x = 3",
            "FL": "theorem exact_5_dev_1 (x : \u2115) (h : x + 1 = 4) : x = 3 := by",
            "state": "x : \u2115\nh : x + 1 = 4\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_5_dev_1",
            "NL": "-- We replace 4 with succ 3 in x + 1 = 4.",
            "FL": "rw [four_eq_succ_three] at h",
            "state": "x : \u2115\nh : x + 1 = succ 3\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_5_dev_1",
            "NL": "-- We replace x + 1 with succ x in x + 1 = succ 3.",
            "FL": "rw [\u2190succ_eq_add_one] at h",
            "state": "x : \u2115\nh : succ x = succ 3\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_5_dev_1",
            "NL": "-- So, x = 3, which is exactly what we wanted to prove.",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "exact_5_dev_2": [{
            "theorem": "exact_5_dev_2",
            "NL": "-- Theorem Declaration: For some x which is a natural number, given x + 1 = 4, prove that x = 3",
            "FL": "theorem exact_5_dev_2 (x : \u2115) (h : x + 1 = 4) : x = 3 := by",
            "state": "x : \u2115\nh : x + 1 = 4\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_5_dev_2",
            "NL": "-- x + 1 = 4 -> x + 1 = succ 3",
            "FL": "rw [four_eq_succ_three] at h",
            "state": "x : \u2115\nh : x + 1 = succ 3\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_5_dev_2",
            "NL": "-- x + 1 = 4 -> succ x = succ 3",
            "FL": "rw [\u2190succ_eq_add_one] at h",
            "state": "x : \u2115\nh : succ x = succ 3\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_5_dev_2",
            "NL": "-- x = 3",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    },
    "exact_6": {
        "exact_6_dev_1": [{
            "theorem": "exact_6_dev_1",
            "NL": "-- Theorem Declaration: For some x, which is a natural number, given x + 1 = 4, prove that x = 3",
            "FL": "theorem exact_6_dev_1 (x : \u2115) (h : x + 1 = 4) : x = 3 := by",
            "state": "x : \u2115\nh : x + 1 = 4\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_6_dev_1",
            "NL": "-- By the injectivity of succ, it suffices to prove succ x = succ 3",
            "FL": "apply succ_inj",
            "state": "case h\nx : \u2115\nh : x + 1 = 4\n\u22a2 succ x = succ 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_6_dev_1",
            "NL": "-- We replace succ 3 with 4 in x + 1 = succ 3.",
            "FL": "rw [\u2190 four_eq_succ_three]",
            "state": "case h\nx : \u2115\nh : x + 1 = 4\n\u22a2 x + 1 = 4\n",
            "is_correct": false
        }, {
            "theorem": "exact_6_dev_1",
            "NL": "-- So, we need to show x + 1 = 4, which is true by hypothesis.",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "exact_6_dev_2": [{
            "theorem": "exact_6_dev_2",
            "NL": "-- Theorem Declaration: For some x, which is a natural number, given x + 1 = 4, prove that x = 3",
            "FL": "theorem exact_6_dev_2 (x : \u2115) (h : x + 1 = 4) : x = 3 := by",
            "state": "x : \u2115\nh : x + 1 = 4\n\u22a2 x = 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_6_dev_2",
            "NL": "-- x = 3 <- succ x = succ 3",
            "FL": "apply succ_inj",
            "state": "case h\nx : \u2115\nh : x + 1 = 4\n\u22a2 succ x = succ 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_6_dev_2",
            "NL": "-- succ x = succ 3 -> x + 1 = succ 3",
            "FL": "rw [succ_eq_add_one]",
            "state": "case h\nx : \u2115\nh : x + 1 = 4\n\u22a2 x + 1 = succ 3\n",
            "is_correct": true
        }, {
            "theorem": "exact_6_dev_2",
            "NL": "-- x + 1 = 4",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    },
    "exact_7": {
        "exact_7_dev_1": [{
            "theorem": "exact_7_dev_1",
            "NL": "-- Theorem Declaration: For some x which is a natural number, prove that x = 37 implies x = 37",
            "FL": "theorem exact_7_dev_1 (x : \u2115) : x = 37 \u2192 x = 37 := by",
            "state": "x : \u2115\n\u22a2 x = 37 \u2192 x = 37\n",
            "is_correct": true
        }, {
            "theorem": "exact_7_dev_1",
            "NL": "-- Consider the hypothesis x = 37.",
            "FL": "intro h",
            "state": "x : \u2115\nh : x = 37\n\u22a2 x = 37\n",
            "is_correct": true
        }],
        "exact_7_dev_2": [{
            "theorem": "exact_7_dev_2",
            "NL": "-- Theorem Declaration: For some x which is a natural number, prove that x = 37 implies x = 37",
            "FL": "theorem exact_7_dev_2 (x : \u2115) : x = 37 \u2192 x = 37 := by",
            "state": "x : \u2115\n\u22a2 x = 37 \u2192 x = 37\n",
            "is_correct": true
        }, {
            "theorem": "exact_7_dev_2",
            "NL": "-- assume x = 37",
            "FL": "intro h",
            "state": "x : \u2115\nh : x = 37\n\u22a2 x = 37\n",
            "is_correct": true
        }]
    },
    "exact_8": {
        "exact_8_dev_1": [{
            "theorem": "exact_8_dev_1",
            "NL": "-- Theorem Declaration: For some x and which are natural numbers, prove that x + 1 = y + 1 implies x = y",
            "FL": "theorem exact_8_dev_1 (x : \u2115) : x + 1 = y + 1 \u2192 x = y := by",
            "state": "y x : \u2115\n\u22a2 x + 1 = y + 1 \u2192 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_8_dev_1",
            "NL": "-- Consider the hypothesis x + 1 = y + 1.",
            "FL": "intro h",
            "state": "y x : \u2115\nh : x + 1 = y + 1\n\u22a2 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_8_dev_1",
            "NL": "-- Change the + 1s to succs in x + 1 = y + 1.",
            "FL": "repeat rw [\u2190 succ_eq_add_one] at h",
            "state": "y x : \u2115\nh : succ x = succ y\n\u22a2 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_8_dev_1",
            "NL": "-- Thus, x = y, which is exactly what we wanted to show.",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "exact_8_dev_2": [{
            "theorem": "exact_8_dev_2",
            "NL": "-- Theorem Declaration: For some x and which are natural numbers, prove that x + 1 = y + 1 implies x = y",
            "FL": "theorem exact_8_dev_2 (x : \u2115) : x + 1 = y + 1 \u2192 x = y := by",
            "state": "y x : \u2115\n\u22a2 x + 1 = y + 1 \u2192 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_8_dev_2",
            "NL": "-- assume x + 1 = y + 1",
            "FL": "intro h",
            "state": "y x : \u2115\nh : x + 1 = y + 1\n\u22a2 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_8_dev_2",
            "NL": "-- succ x = succ y -> x = y",
            "FL": "apply succ_inj at h",
            "state": "y x : \u2115\nh : x = y\n\u22a2 x = y\n",
            "is_correct": false
        }, {
            "theorem": "exact_8_dev_2",
            "NL": "-- x = y",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    },
    "exact_9": {
        "exact_9_dev_1": [{
            "theorem": "exact_9_dev_1",
            "NL": "-- Theorem Declaration: For some x and which are natural numbers, prove that x + 1 = y + 1 implies x = y",
            "FL": "theorem exact_9_dev_1 (x : \u2115) : x + 1 = y + 1 \u2192 x = y := by",
            "state": "y x : \u2115\n\u22a2 x + 1 = y + 1 \u2192 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_9_dev_1",
            "NL": "-- Consider the hypothesis x + 1 = y + 1",
            "FL": "intro h",
            "state": "y x : \u2115\nh : x + 1 = y + 1\n\u22a2 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_9_dev_1",
            "NL": "-- By the injectivity of succ, it suffices to show that succ x = succ y",
            "FL": "apply succ_inj",
            "state": "case h\ny x : \u2115\nh : x + 1 = y + 1\n\u22a2 succ x = succ y\n",
            "is_correct": true
        }, {
            "theorem": "exact_9_dev_1",
            "NL": "-- So we want to show x + 1 = y + 1, which is true by hypothesis",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "exact_9_dev_2": [{
            "theorem": "exact_9_dev_2",
            "NL": "-- Theorem Declaration: For some x and which are natural numbers, prove that x + 1 = y + 1 implies x = y",
            "FL": "theorem exact_9_dev_2 (x : \u2115) : x + 1 = y + 1 \u2192 x = y := by",
            "state": "y x : \u2115\n\u22a2 x + 1 = y + 1 \u2192 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_9_dev_2",
            "NL": "-- assume x + 1 = y + 1",
            "FL": "intro h",
            "state": "y x : \u2115\nh : x + 1 = y + 1\n\u22a2 x = y\n",
            "is_correct": true
        }, {
            "theorem": "exact_9_dev_2",
            "NL": "-- succ x = succ y -> x + 1 = y + 1",
            "FL": "repeat rw [succ_eq_add_one]",
            "state": "case h\ny x : \u2115\nh : x + 1 = y + 1\n\u22a2 x + 1 = y + 1\n",
            "is_correct": false
        }, {
            "theorem": "exact_9_dev_2",
            "NL": "-- x + 1 = y + 1",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    },
    "exact_10": {
        "exact_10_dev_1": [{
            "theorem": "exact_10_dev_1",
            "NL": "-- Theorem Declaration: For some x and which are natural numbers, prove that both x = y and x \u2260 y cannot be true",
            "FL": "theorem exact_10_dev_1 (x y : \u2115) (h1 : x = y) (h2 : x \u2260 y) : False := by",
            "state": "x y : \u2115\nh1 : x = y\nh2 : x \u2260 y\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "exact_10_dev_1",
            "NL": "-- We have x \u2260 y (which really means x = y -> False), and we know x = y, so by modus ponens, we know False",
            "FL": "apply h2 at h1",
            "state": "x y : \u2115\nh2 : x \u2260 y\nh1 : False\n\u22a2 False\n",
            "is_correct": true
        }],
        "exact_10_dev_2": [{
            "theorem": "exact_10_dev_2",
            "NL": "-- Theorem Declaration: For some x and which are natural numbers, prove that both x = y and x \u2260 y cannot be true",
            "FL": "theorem exact_10_dev_2 (x y : \u2115) (h1 : x = y) (h2 : x \u2260 y) : False := by",
            "state": "x y : \u2115\nh1 : x = y\nh2 : x \u2260 y\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "exact_10_dev_2",
            "NL": "-- x = y and x \u2260 y -> False",
            "FL": "apply h2 at h1",
            "state": "x y : \u2115\nh2 : x \u2260 y\nh1 : False\n\u22a2 False\n",
            "is_correct": true
        }]
    },
    "zero_ne_one": {
        "zero_ne_one_dev_1": [{
            "theorem": "zero_ne_one_dev_1",
            "NL": "-- Theorem Declaration: Given that 0 is a natural number, prove that 0 \u2260 1",
            "FL": "theorem zero_ne_one_dev_1 : (0 : \u2115) \u2260 1 := by",
            "state": "\u22a2 0 \u2260 1\n",
            "is_correct": true
        }, {
            "theorem": "zero_ne_one_dev_1",
            "NL": "-- To show 0 \u2260 1, we must assume 0 = 1 and derive a contradiction/falsehood",
            "FL": "intro h",
            "state": "h : 0 = 1\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "zero_ne_one_dev_1",
            "NL": "-- So, we have a falsehood, as desired.",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "zero_ne_one_dev_2": [{
            "theorem": "zero_ne_one_dev_2",
            "NL": "-- Theorem Declaration: Given that 0 is a natural number, prove that 0 \u2260 1",
            "FL": "theorem zero_ne_one_dev_2 : (0 : \u2115) \u2260 1 := by",
            "state": "\u22a2 0 \u2260 1\n",
            "is_correct": true
        }, {
            "theorem": "zero_ne_one_dev_2",
            "NL": "-- assume 0 = 1",
            "FL": "intro h",
            "state": "h : 0 = 1\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "zero_ne_one_dev_2",
            "NL": "-- False",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    },
    "one_ne_zero": {
        "one_ne_zero_dev_1": [{
            "theorem": "one_ne_zero_dev_1",
            "NL": "-- Theorem Declaration: Given that 1 is a natural number, prove that 1 \u2260 0",
            "FL": "theorem one_ne_zero_dev_1 : (1 : \u2115) \u2260 0 := by",
            "state": "\u22a2 1 \u2260 0\n",
            "is_correct": true
        }, {
            "theorem": "one_ne_zero_dev_1",
            "NL": "-- Instead of showing 1 \u2260 0, we can show 0 \u2260 1",
            "FL": "symm",
            "state": "\u22a2 0 \u2260 1\n",
            "is_correct": true
        }],
        "one_ne_zero_dev_2": [{
            "theorem": "one_ne_zero_dev_2",
            "NL": "-- Theorem Declaration: Given that 1 is a natural number, prove that 1 \u2260 0",
            "FL": "theorem one_ne_zero_dev_2 : (1 : \u2115) \u2260 0 := by",
            "state": "\u22a2 1 \u2260 0\n",
            "is_correct": true
        }, {
            "theorem": "one_ne_zero_dev_2",
            "NL": "-- 1 \u2260 0 <- 0 \u2260 1",
            "FL": "symm",
            "state": "\u22a2 0 \u2260 1\n",
            "is_correct": true
        }]
    },
    "two_five": {
        "two_five_dev_1": [{
            "theorem": "two_five_dev_1",
            "NL": "-- Theorem Declaration: Prove that 2 + 2 \u2260 5;  written in successor terms: succ (succ 0) + succ (succ 0) \u2260 succ (succ (succ (succ (succ 0))))",
            "FL": "theorem two_five_dev_1 : succ (succ 0) + succ (succ 0) \u2260 succ (succ (succ (succ (succ 0)))) := by",
            "state": "\u22a2 succ (succ 0) + succ (succ 0) \u2260 succ (succ (succ (succ (succ 0))))\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_1",
            "NL": "-- We must assume succ (succ 0) + succ (succ 0) = succ (succ (succ (succ (succ 0)))) and derive a contradiction/falsehood.",
            "FL": "intro h",
            "state": "h : succ (succ 0) + succ (succ 0) = succ (succ (succ (succ (succ 0))))\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_1",
            "NL": "-- Using our previous theorems, we can change succ (succ 0) + succ (succ 0) into succ (succ (succ (succ 0)))",
            "FL": "rw [add_succ, add_succ, add_zero] at h",
            "state": "h : succ (succ (succ (succ 0))) = succ (succ (succ (succ (succ 0))))\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_1",
            "NL": "-- By the injectivity of succ, we know that 0 = succ 0",
            "FL": "repeat apply succ_inj at h",
            "state": "h : 0 = succ 0\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_1",
            "NL": "-- Thus, we have a falsehood/contradiction, which is what we wanted to show",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }],
        "two_five_dev_2": [{
            "theorem": "two_five_dev_2",
            "NL": "-- Theorem Declaration: Prove that 2 + 2 \u2260 5;  written in successor terms: succ (succ 0) + succ (succ 0) \u2260 succ (succ (succ (succ (succ 0))))",
            "FL": "theorem two_five_dev_2 : succ (succ 0) + succ (succ 0) \u2260 succ (succ (succ (succ (succ 0)))) := by",
            "state": "\u22a2 succ (succ 0) + succ (succ 0) \u2260 succ (succ (succ (succ (succ 0))))\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_2",
            "NL": "-- assume succ (succ 0) + succ (succ 0) = succ (succ (succ (succ (succ 0))))",
            "FL": "intro h",
            "state": "h : succ (succ 0) + succ (succ 0) = succ (succ (succ (succ (succ 0))))\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_2",
            "NL": "-- succ (succ 0) + succ (succ 0) = succ (succ (succ (succ (succ 0)))) -> succ (succ (succ (succ 0))) = succ (succ (succ (succ (succ 0))))",
            "FL": "rw [add_succ, add_succ, add_zero] at h",
            "state": "h : succ (succ (succ (succ 0))) = succ (succ (succ (succ (succ 0))))\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_2",
            "NL": "-- succ (succ (succ (succ 0))) = succ (succ (succ (succ (succ 0)))) -> 0 = succ 0",
            "FL": "repeat apply succ_inj at h",
            "state": "h : 0 = succ 0\n\u22a2 False\n",
            "is_correct": true
        }, {
            "theorem": "two_five_dev_2",
            "NL": "-- False",
            "FL": "exact h",
            "state": "",
            "is_correct": false
        }]
    }
}