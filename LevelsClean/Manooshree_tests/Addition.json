[
  {
    "theorem": "zero_add",
    "NL": "Prove that 0 + n = n for all natural numbers",
    "FL": "theorem zero_add (n : ℕ) : 0 + n = n",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "zero_add",
    "NL": "Induct on n, with d = 0 as the base case and the inductive hypothesis 0 + d = d. There are now two proof goals, prove base case: 0 + 0 = 0, and inductive step: 0 + succ (d) = succ (d)",
    "FL": "  induction n with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "zero_add",
    "NL": "First prove base case. Reduce LHS 0 + 0 = 0.",
    "FL": "  · rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "zero_add",
    "NL": "Prove LHS and RHS are equal, 0 = 0, completing base case",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "zero_add",
    "NL": "Now prove inductive step. Rewrite 0 + succ d = succ (0 + d)",
    "FL": "  · rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "zero_add",
    "NL": "Simplify RHS succ (0 + d) = succ(d) using the inductive hypothesis.",
    "FL": "    rw [hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "zero_add",
    "NL": "Prove LHS and RHS are equal, succ(d) = succ(d), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Prove that succ (a) + b  = succ (a + b) for all natural numbers",
    "FL": "theorem succ_add (a b : ℕ) : succ a + b = succ (a + b)",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Induct on b, with d = 0 as the base case and the inductive hypothesis succ (a) + d = succ (a + d). There are now two proof goals, prove base case: succ (a) + 0 = succ (a + 0) and inductive step: succ (a) + succ (d) = succ (a + succ (d))",
    "FL": "  induction b with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "First prove base case. Reduce LHS succ (a) + 0 = succ (a)",
    "FL": "  · rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Reduce RHS succ(a + 0) = succ (a)",
    "FL": "    rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Prove succ (a) = succ (a), finishing the base case",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Now prove the inductive step. Rewrite succ (a) + succ (d) = succ (succ a + d)",
    "FL": "  · rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Rewrite succ (a + succ d) = succ (succ (a + d))",
    "FL": "    rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Rewrite RHS succ (succ a + d) to succ (succ (a + d)) using the inductive hypothesis",
    "FL": "    rw [hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add",
    "NL": "Prove succ (succ (a + d)) = succ (succ (a + d)), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "Prove that succ (a) + b  = succ (a + b) for all natural numbers",
    "FL": "theorem succ_add_2 (a b : ℕ) : succ a + b = succ (a + b)",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "Induct on b, with d = 0 as the base case and the inductive hypothesis succ (a) + d = succ (a + d). There are now two proof goals, prove base case: succ (a) + 0 = succ (a + 0) and inductive step: succ (a) + succ (d) = succ (a + succ (d))",
    "FL": "  induction b with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "First prove base case. Reduce LHS succ (a) + 0 = succ (a)",
    "FL": "  · rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "Reduce RHS succ(a + 0) = succ (a)",
    "FL": "    rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "Prove succ (a) = succ (a), finishing the base case",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "Now prove the inductive step. Rewrite the LHS succ (a) + succ (d) = succ (succ (a + d)) and the RHS succ (a + succ d) = succ (succ (a + d)). Then rewrite RHS succ (succ a + d) to succ (succ (a + d)) using the inductive hypothesis",
    "FL": "  · rw [add_succ, add_succ, hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "succ_add_2",
    "NL": "Prove succ (succ (a + d)) = succ (succ (a + d)), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
    "FL": "theorem add_comm (a b : ℕ) : a + b = b + a",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Induct on b, with d = 0 as the base case and the inductive hypothesis a + d = d + a. There are now two proof goals, prove base case: a + 0 = 0 + a and the inductive step: a + succ d = succ d + a",
    "FL": "  induction b with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "First prove base case. Simplify LHS a + 0 = a.",
    "FL": "  · rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Simplify RHS 0 + a = a",
    "FL": "    rw [zero_add]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Prove LHS and RHS are equal, a = a, completing the base case.",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Now prove the inductive step. Rewrite LHS a + succ (d) = succ (a + d)",
    "FL": "  · rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Rewrite RHS succ (d) + a = succ (d + a)",
    "FL": "    rw [succ_add]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Rewrite LHS succ (a + d) to succ (d + a) using the inductive hypothesis",
    "FL": "    rw [hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm",
    "NL": "Prove succ LHS and RHS are equal, (d + a) = succ (d + a), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_2",
    "NL": "Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
    "FL": "theorem add_comm_2 (a b : ℕ) : a + b = b + a",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_2",
    "NL": "Induct on b, with d = 0 as the base case and the inductive hypothesis a + d = d + a. There are now two proof goals, prove base case: a + 0 = 0 + a and the inductive step: a + succ d = succ d + a",
    "FL": "  induction b with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_2",
    "NL": "First prove base case. Simplify LHS a + 0 = a and RHS 0 + a = a.",
    "FL": "  · rw [add_zero, zero_add]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_2",
    "NL": "Prove LHS and RHS are equal, a = a, completing the base case.",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_2",
    "NL": "Now prove the inductive step. Rewrite LHS a + succ (d) = succ (a + d) and RHS succ (d) + a = succ (d + a). Then, use the inductive hypothesis to rewrite succ (a + d) = succ (d + a)",
    "FL": "  · rw [add_succ, succ_add, hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_2",
    "NL": "Prove succ LHS and RHS are equal, (d + a) = succ (d + a), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_3",
    "NL": "Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
    "FL": "theorem add_comm_3 (a b : ℕ) : a + b = b + a",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_3",
    "NL": "Induct on a, with d = 0 as the base case and the inductive hypothesis d + b = b + d. There are now two proof goals, prove base case: 0 + b = b + 0 and the inductive step: succ d + b = b + succ d",
    "FL": "  induction a with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_3",
    "NL": "First prove base case. Simplify RHS b + 0 = b and LHS 0 + b = b",
    "FL": "  · rw [add_zero, zero_add]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_3",
    "NL": "Prove LHS and RHS are equal, b = b, completing the base case.",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_3",
    "NL": "Now prove the inductive step. Rewrite RHS b + succ d = succ (b + d) and LHS succ (d) + b = succ (d + b). Then, use the inductive hypothesis to rewrite succ (d + b) = succ (b + d)",
    "FL": "  · rw [add_succ, succ_add, hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_comm_3",
    "NL": "Prove LHS and RHS are equal, succ (b + d) = succ (b + d), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
    "FL": "theorem add_assoc (a b c : ℕ) : a + b + c = a + (b + c)",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Induct on c, with d = 0 as the base case and the inductive hypothesis a + b + d = a + (b + d). There are now two proof goals, prove base case: a + b + 0 = a + (b + 0), and inductive step: a + b + succ (d) = a + (b + succ (d))",
    "FL": "  induction c with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "First prove base case. Simplify LHS a + b + 0 = a + b",
    "FL": "  · rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Reduce RHS a + (b + 0) to a + b",
    "FL": "    rw [add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Prove LHS and RHS are equal, a + b = a + b, completing the base case.",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Now prove the inductive step. Rewrite the LHS expression a + b + succ d to succ (a + b + d)",
    "FL": "  · rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Rewrite RHS a + (b + succ d) to a + succ (b + d)",
    "FL": "    rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Use the inductive hypothesis to rewrite the left-hand side, changing succ (a + b + d) to succ (a + (b + d))",
    "FL": "    rw [hd]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Rewrite the RHS, a + succ (b + d) to succ (a + (b + d))",
    "FL": "    rw [add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc",
    "NL": "Prove LHS and RHS are equal, succ (a + (b + d)) = succ (a + (b + d)), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc_2",
    "NL": "Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
    "FL": "theorem add_assoc_2 (a b c : ℕ) : a + b + c = a + (b + c)",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc_2",
    "NL": "Induct on c, with d = 0 as the base case and the inductive hypothesis a + b + d = a + (b + d). There are now two proof goals, prove base case: a + b + 0 = a + (b + 0), and inductive step: a + b + succ (d) = a + (b + succ (d)).",
    "FL": "  induction c with d hd",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc_2",
    "NL": "First we prove the base case. Simplify the LHS and RHS both to a + b",
    "FL": "  · rw [add_zero, add_zero]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc_2",
    "NL": "Prove LHS and RHS are equal, a + b = a + b, completing the base case.",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc_2",
    "NL": "Now prove the inductive step. Rewrite the LHS: a + b + succ (d) to succ (a + b + d) and then to succ (a + (b + d)), using the inductive hypothesis. Change the RHS: a + (b + succ d) to a + succ (b + d) to succ (a + (b + d))",
    "FL": "  · rw [add_succ, add_succ, hd, add_succ]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_assoc_2",
    "NL": "Prove LHS and RHS are equal, succ (a + (b + d)) = succ (a + (b + d)), completing the proof",
    "FL": "    rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm",
    "NL": "Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
    "FL": "theorem add_right_comm (a b c : ℕ) : a + b + c = a + c + b",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm",
    "NL": "Apply the associative property of addition to rewrite the LHS of the equation, changing a + b + c to a + (b + c)",
    "FL": "  rw [add_assoc]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm",
    "NL": "Rewrite the LHS of the equation by applying the commutative property of addition to b and c, LHS is now a + (c + b)",
    "FL": "  rw [add_comm b]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm",
    "NL": "Rewrite the RHS using the associative property: a + c + b to a + (c + b).",
    "FL": "  rw [add_assoc]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm",
    "NL": "Prove LHS and RHS are equal, a + (c + b) = a + (c + b), completing the proof",
    "FL": "  rfl",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm_2",
    "NL": "Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
    "FL": "theorem add_right_comm_2 (a b c : ℕ) : a + b + c = a + c + b",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm_2",
    "NL": "Apply the associative property of addition to rewrite the LHS: a + b + c to a + (b + c).",
    "FL": "  rw [add_assoc]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm_2",
    "NL": "Rewrite the LHS using the commutative property of addition for b and c: a + (b + c) to a + (c + b).",
    "FL": "  rw [add_comm b c]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm_2",
    "NL": "Rewrite the RHS using the associative property of addition: a + c + b to a + (c + b).",
    "FL": "  rw [add_assoc]",
    "filename": "AdditionClean.lean"
  },
  {
    "theorem": "add_right_comm_2",
    "NL": "Prove LHS and RHS are equal, completing the proof.",
    "FL": "  rfl",
    "filename": "AdditionClean.lean"
  }
]