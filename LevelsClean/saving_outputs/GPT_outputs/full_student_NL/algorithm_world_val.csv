World Name,Theorem Name,Natural Language,Predicted Formalization,True Tactic,True Goal State,Predicted Goal State,Is Correct
algorithm_world_val,add_left_comm,"-- By associativity of addition, can change a + (b + c) into (a + b) + c",rw [add_assoc],rw [← add_assoc],"a b c : ℕ
⊢ a + b + c = b + (a + c)
",error,No
algorithm_world_val,add_left_comm,"-- By the commutativity of addition, can change (a + b) + c into (b + a) + c",rw [add_comm a b],rw [add_comm a b],"a b c : ℕ
⊢ b + a + c = b + (a + c)
",error,Yes
algorithm_world_val,add_left_comm,"-- By the associativity of addition, can change (b + a) + c into b + (a + c)",rw [add_assoc],rw [add_assoc],"a b c : ℕ
⊢ b + (a + c) = b + (a + c)
",error,Yes
algorithm_world_val,add_left_comm,"-- So we just need to show b + (a + c) = b + (a + c), which is true by reflexivity.",rfl,rfl,,error,Yes
algorithm_world_val,add_left_comm,-- a + (b + c) = b + (a + c) -> (a + b) + c = b + (a + c),rw [←add_assoc],rw [← add_assoc],"a b c : ℕ
⊢ a + b + c = b + (a + c)
","a b c : ℕ
⊢ a + b + c = b + (a + c)
",Yes
algorithm_world_val,add_left_comm,-- (a + b) + c = b + (a + c) -> (b + a) + c = b + (a + c),rw [add_comm a b],rw [add_comm a b],"a b c : ℕ
⊢ b + a + c = b + (a + c)
","a b c : ℕ
⊢ b + a + c = b + (a + c)
",Yes
algorithm_world_val,add_left_comm,-- (b + a) + c = b + (a + c) -> b + (a + c) = b + (a + c),rfl,rw [add_assoc],"a b c : ℕ
⊢ b + (a + c) = b + (a + c)
",error,No
algorithm_world_val,add_left_comm,-- lhs = rhs,rfl,rfl,,error,Yes
