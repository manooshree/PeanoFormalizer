[
  {
    "theorem": "skipped_add_zero_intro",
    "NL": "-- Theorem Declaration: Prove for natural numbers a, b, and c, that a + (b + 0) + (c + 0) is equal to a + b + c",
    "FL": "theorem skipped_add_zero_intro (a b c : \u2115) : a + (b + 0) + (c + 0) = a + b + c := by",
    "state": "a b c : \u2115\n\u22a2 a + (b + 0) + (c + 0) = a + b + c\n",
    "is_error": false
  },
  {
    "theorem": "skipped_add_zero_intro",
    "NL": "-- Simplify the expression in the LHS (c + 0) to  c",
    "FL": "rw [add_zero c]",
    "state": "a b c : \u2115\n\u22a2 a + (b + 0) + c = a + b + c\n",
    "is_error": false
  },
  {
    "theorem": "skipped_add_zero_intro",
    "NL": "-- Prove LHS and RHS are equal, a + b + c = a + b + c, completing the proof",
    "FL": "rfl -- error",
    "state": "  a + (b + 0) + c\nis not definitionally equal to rhs\n  a + b + c\na b c : \u2115\n\u22a2 a + (b + 0) + c = a + b + c\n",
    "is_error": true
  },
  {
    "theorem": "skipped_succ_eq_add_one",
    "NL": "-- Theorem Declaration: For natural number n, prove that succ n is equivalent to n + 1",
    "FL": "theorem skipped_succ_eq_add_one n : succ n = n + 1 := by",
    "state": "n : \u2115\n\u22a2 succ n = n + 1\n",
    "is_error": false
  },
  {
    "theorem": "skipped_succ_eq_add_one",
    "NL": "-- Rewrite RHS n + 1 as n + succ 0",
    "FL": "rw [one_eq_succ_zero]",
    "state": "n : \u2115\n\u22a2 succ n = n + succ 0\n",
    "is_error": false
  },
  {
    "theorem": "skipped_succ_eq_add_one",
    "NL": "-- Prove LHS and RHS are equal, succ n = succ n, completing the proof",
    "FL": "rfl -- error",
    "state": "  succ n\nis not definitionally equal to rhs\n  n + succ 0\nn : \u2115\n\u22a2 succ n = n + succ 0\n",
    "is_error": true
  },
  {
    "theorem": "skipped_twoaddtwo",
    "NL": "-- Theorem Declaration: Prove 2 + 2 = 4",
    "FL": "theorem skipped_twoaddtwo : (2 : \u2115) + 2 = 4 := by",
    "state": "\u22a2 2 + 2 = 4\n",
    "is_error": false
  },
  {
    "theorem": "skipped_twoaddtwo",
    "NL": "-- Replace the second 2 in the LHS with succ 1, changing 2 + 2 to 2 + succ 1",
    "FL": "nth_rewrite 2 [two_eq_succ_one]",
    "state": "\u22a2 2 + succ 1 = 4\n",
    "is_error": false
  },
  {
    "theorem": "skipped_twoaddtwo",
    "NL": "-- Rewrite LHS from 2 + succ 1 to succ (2 + 1)",
    "FL": "rw [add_succ]",
    "state": "\u22a2 succ (2 + 1) = 4\n",
    "is_error": false
  },
  {
    "theorem": "skipped_twoaddtwo",
    "NL": "-- Rewrite 1 as succ 0, so LHS changes from succ (2 + 1) to succ (2 + succ 0)",
    "FL": "rw [one_eq_succ_zero]",
    "state": "\u22a2 succ (2 + succ 0) = 4\n",
    "is_error": false
  },
  {
    "theorem": "skipped_twoaddtwo",
    "NL": "-- Prove LHS and RHS are equal, succ (succ 2) = succ (succ 2), completing the proof",
    "FL": "rfl -- error",
    "state": "  succ (2 + succ 0)\nis not definitionally equal to rhs\n  4\n\u22a2 succ (2 + succ 0) = 4\n",
    "is_error": true
  }
]