{
    "zero_add": {
        "zero_add__dev_1": [
            {
                "theorem": "zero_add__dev_1",
                "NL": "-- Theorem Declaration: Prove that 0 + n = n for all natural numbers",
                "FL": "theorem zero_add__dev_1 (n : \u2115) : 0 + n = n := by",
                "state": "n : \u2115\n\u22a2 0 + n = n\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_1",
                "NL": "-- Induct on n",
                "FL": "induction n with d hd",
                "state": "case zero\n\u22a2 0 + 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_1",
                "NL": "-- substitute 0 -> 0 + 0 into the RHS giving us 0 + 0 = 0 + 0",
                "FL": "nth_rewrite 3 [\u2190 add_zero 0]",
                "state": "case zero\n\u22a2 0 + 0 = 0 + 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_1",
                "NL": "-- 0 + 0 = 0 + 0, completing base case",
                "FL": "rfl",
                "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_1",
                "NL": "-- succ d = succ d, QED",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ],
        "zero_add__dev_2": [
            {
                "theorem": "zero_add__dev_2",
                "NL": "-- Theorem Declaration: Prove that 0 + n = n for all natural numbers",
                "FL": "theorem zero_add__dev_2 (n : \u2115) : 0 + n = n := by",
                "state": "n : \u2115\n\u22a2 0 + n = n\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_2",
                "NL": "-- Begin by initiating induction on n",
                "FL": "induction n with d hd",
                "state": "case zero\n\u22a2 0 + 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_2",
                "NL": "-- Using the properties of addition by 0 we can rewrite 0 + 0 to 0 on the LHS",
                "FL": "rw [add_zero]",
                "state": "case zero\n\u22a2 0 = 0\ncase succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_2",
                "NL": "-- Since both sides are equal, we are done with the base case",
                "FL": "rfl",
                "state": "case succ\nd : \u2115\nhd : 0 + d = d\n\u22a2 0 + succ d = succ d\n",
                "is_correct": true
            },
            {
                "theorem": "zero_add__dev_2",
                "NL": "-- Since both sides are equal, we are done with the proof",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ]
    },
    "succ_add": {
        "succ_add__dev_1": [
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, that is a + b + c = a + (b + c).",
                "FL": "theorem succ_add__dev_1 (a b : \u2115) : succ a + b = succ (a + b) := by",
                "state": "a b : \u2115\n\u22a2 succ a + b = succ (a + b)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- Initiate induction on b",
                "FL": "induction b with n hn",
                "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- succ(a) + 0 -> succ(a) on LHS giving us succ(a) = succ(a+0)",
                "FL": "rw [add_zero]",
                "state": "case zero\na : \u2115\n\u22a2 succ a = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- a + 0 -> a on RHS giving us succ(a) = succ(a)",
                "FL": "rw [add_zero]",
                "state": "case zero\na : \u2115\n\u22a2 succ a = succ a\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- succ(a) = succ(a), Hence we are done with the base case",
                "FL": "rfl",
                "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- Now for the induction case. succ(a) + succ(n) -> succ(succ(a) + n) on LHS giving us succ(succ(a) + n) = succ(a + succ(n))",
                "FL": "rw [add_succ]",
                "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_1",
                "NL": "-- succ(succ(a) + n) = succ(succ(a) + n), QED",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ],
        "succ_add__dev_2": [
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, that is a + b + c = a + (b + c).",
                "FL": "theorem succ_add__dev_2 (a b : \u2115) : succ a + b = succ (a + b)  := by",
                "state": "a b : \u2115\n\u22a2 succ a + b = succ (a + b)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- Initiate induction on b.",
                "FL": "induction b with n hn",
                "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- We start by proving the base case using properties of succession, succ(a+0) = a + succ(0) on RHS",
                "FL": "rw [\u2190 add_succ]",
                "state": "case zero\na : \u2115\n\u22a2 succ a + 0 = a + succ 0\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- Now using properties of addition by 0, we can rewrite succ(a) + 0 to succ(a) on the LHS",
                "FL": "rw [add_zero]",
                "state": "case zero\na : \u2115\n\u22a2 succ a = a + succ 0\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- Now using properties of succession, we can rewrite succ(a) + 0 to succ(a+0) on the RHS",
                "FL": "rw [add_succ]",
                "state": "case zero\na : \u2115\n\u22a2 succ a = succ (a + 0)\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- Now using properties of addition by 0, we can rewrite a + 0 to a on the RHS",
                "FL": "rw [add_zero]",
                "state": "case zero\na : \u2115\n\u22a2 succ a = succ a\ncase succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- since succ(a) = succ(a), we are done with the base case",
                "FL": "rfl",
                "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ a + succ n = succ (a + succ n)\n",
                "is_correct": true
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- Now again using properties of succession, we substitute succ(a + succ(n)) to succ(succ(a + n)) on the RHS",
                "FL": "rw [add_succ]",
                "state": "case succ\na n : \u2115\nhn : succ a + n = succ (a + n)\n\u22a2 succ (succ a + n) = succ (succ (a + n))\n",
                "is_correct": false
            },
            {
                "theorem": "succ_add__dev_2",
                "NL": "-- both sides are equal, hence we are done",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ]
    },
    "add_comm": {
        "add_comm__dev_1": [
            {
                "theorem": "add_comm__dev_1",
                "NL": "-- Theorem Declaration: Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
                "FL": "theorem add_comm__dev_1 (a b : \u2115) : a + b = b + a := by",
                "state": "a b : \u2115\n\u22a2 a + b = b + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_1",
                "NL": "-- Start by inducting on b",
                "FL": "induction b with d hd",
                "state": "case zero\na : \u2115\n\u22a2 a + 0 = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_1",
                "NL": "-- 0 + a -> a on RHS giving us a + 0 = a",
                "FL": "rw [zero_add]",
                "state": "case zero\na : \u2115\n\u22a2 a + 0 = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_1",
                "NL": "--  a + 0 -> a into the LHS to get a = a",
                "FL": "rw [add_zero]",
                "state": "case zero\na : \u2115\n\u22a2 a = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_1",
                "NL": "-- a=a, we are done with the base case",
                "FL": "rfl",
                "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_1",
                "NL": "-- a + succ d -> succ (a + d) on LHS giving us succ (a + d) = succ (d + a) on LHS",
                "FL": "rw [add_succ]",
                "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_1",
                "NL": "-- succ (n + a) = succ (n + a), we are done.",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ],
        "add_comm__dev_2": [
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- Theorem Declaration: Prove that addition is commutative, that is a + b  = b + a for all natural numbers",
                "FL": "theorem add_comm__dev_2 (a b : \u2115) : a + b = b + a := by",
                "state": "a b : \u2115\n\u22a2 a + b = b + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- Start by inducting on b",
                "FL": "induction b with d hd",
                "state": "case zero\na : \u2115\n\u22a2 a + 0 = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- We start with the base case. using properties of addition by 0 we can rewrite a + 0 to a on the LHS",
                "FL": "rw [add_zero]",
                "state": "case zero\na : \u2115\n\u22a2 a = 0 + a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- using properties of addition by 0 we can rewrite 0 + a to a on the RHS",
                "FL": "rw [zero_add]",
                "state": "case zero\na : \u2115\n\u22a2 a = a\ncase succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ d + a\n",
                "is_correct": true
            },
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- Now to the (n+1) step. using properties of successors, succ (n) + a -> succ (n + a) and substitute this into the RHS",
                "FL": "rw [succ_add]",
                "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 a + succ d = succ (d + a)\n",
                "is_correct": false
            },
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- using properties of succession, we substitute a + succ(n) -> succ(a+n) on the RHS",
                "FL": "rw [add_succ]",
                "state": "case succ\na d : \u2115\nhd : a + d = d + a\n\u22a2 succ (a + d) = succ (d + a)\n",
                "is_correct": false
            },
            {
                "theorem": "add_comm__dev_2",
                "NL": "-- since both sides are equal, we are done with the proof",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ]
    },
    "add_assoc": {
        "add_assoc__dev_1": [
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
                "FL": "theorem add_assoc__dev_1 (a b c : \u2115) : a + b + c = a + (b + c) := by",
                "state": "a b c : \u2115\n\u22a2 a + b + c = a + (b + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- intiate induction on b",
                "FL": "induction b with d hd",
                "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + (0 + c)\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- We rewrite on the RHS 0 + c -> c to get a + 0 + c = a + c",
                "FL": "rw [zero_add]",
                "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- We rewrite on the LHS a + 0 -> a to get a + c = a + c",
                "FL": "rw [add_zero]",
                "state": "case zero\na c : \u2115\n\u22a2 a + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- a + c = a + c, completing the base case.",
                "FL": "rfl",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- Now prove the inductive step.  a + succ d -> succ (a + d) giving us succ (a + d) + c = a + (succ d + c)",
                "FL": "rw [add_succ]",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d) + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- Now we use the inductive hypothesis on LHS (a + d + c) -> a + (d + c) to get succ(a + (d + c)) = a + succ (d + c)",
                "FL": "rw [hd]",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = a + (succ d + c)\n",
                "is_correct": false
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- Rewrite on RHS, a + succ (d + c) -> succ (a + (d + c)) to get succ (a + (d + c)) = succ (a + (d + c))",
                "FL": "rw [add_succ]",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = succ (a + (d + c))\n",
                "is_correct": false
            },
            {
                "theorem": "add_assoc__dev_1",
                "NL": "-- succ (a + (d + c)) = succ (a + (d + c)), QED",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ],
        "add_assoc__dev_2": [
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is associative, i.e., a + b + c = a + (b + c).",
                "FL": "theorem add_assoc__dev_2 (a b c : \u2115) : a + b + c = a + (b + c) := by",
                "state": "a b c : \u2115\n\u22a2 a + b + c = a + (b + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- Induct on b",
                "FL": "induction b with d hd",
                "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + (0 + c)\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- First prove base case. we use properties of addition by 0 to rewrite 0 + c to c on the RHS",
                "FL": "rw [zero_add]",
                "state": "case zero\na c : \u2115\n\u22a2 a + 0 + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- using properties of addition by 0 we can rewrite a + 0 to a on the LHS",
                "FL": "rw [add_zero]",
                "state": "case zero\na c : \u2115\n\u22a2 a + c = a + c\ncase succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- both sides are equal, hence we are done with the base case",
                "FL": "rfl",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + (succ d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- Now for the inductive case. we use properties of succession to rewrite (succ n + c) to succ (n + c) on the RHS",
                "FL": "rw [succ_add]",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 a + succ d + c = a + succ (d + c)\n",
                "is_correct": true
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- Again using properties of succession we rewrite a + succ(n + c) to succ(a + (n + c)) on the RHS",
                "FL": "rw [add_succ]",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + d + c) = succ (a + (d + c))\n",
                "is_correct": false
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- Using the induction hypothesis we rewrite succ(a + n + c) to succ(a + (n + c)) on the LHS",
                "FL": "rw [hd]",
                "state": "case succ\na c d : \u2115\nhd : a + d + c = a + (d + c)\n\u22a2 succ (a + (d + c)) = succ (a + (d + c))\n",
                "is_correct": false
            },
            {
                "theorem": "add_assoc__dev_2",
                "NL": "-- both sides are equal, hence we are done with the proof",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ]
    },
    "add_right_comm": {
        "add_right_comm__dev_1": [
            {
                "theorem": "add_right_comm__dev_1",
                "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
                "FL": "theorem add_right_comm__dev_1 (a b c : \u2115) : a + b + c = a + c + b := by",
                "state": "a b c : \u2115\n\u22a2 a + b + c = a + c + b\n",
                "is_correct": true
            },
            {
                "theorem": "add_right_comm__dev_1",
                "NL": "-- a + b + c -> a + (b + c) on the LHS giving us a + (b + c) = a + c + b",
                "FL": "rw [add_assoc]",
                "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + c + b\n",
                "is_correct": true
            },
            {
                "theorem": "add_right_comm__dev_1",
                "NL": "-- a + (c + b) = a + (c + b), QED",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ],
        "add_right_comm__dev_2": [
            {
                "theorem": "add_right_comm__dev_2",
                "NL": "-- Theorem Declaration: Prove that the addition of natural numbers is commutative, that is a + b + c = a + c + b",
                "FL": "theorem add_right_comm__dev_2 (a b c : \u2115) : a + b + c = a + c + b := by",
                "state": "a b c : \u2115\n\u22a2 a + b + c = a + c + b\n",
                "is_correct": true
            },
            {
                "theorem": "add_right_comm__dev_2",
                "NL": "-- Apply the associative property of addition to rewrite the LHS: a + b + c to a + (b + c).",
                "FL": "rw [add_assoc]",
                "state": "a b c : \u2115\n\u22a2 a + (b + c) = a + c + b\n",
                "is_correct": true
            },
            {
                "theorem": "add_right_comm__dev_2",
                "NL": "-- since both sides are equal, we are done with the proof",
                "FL": "rfl",
                "state": "",
                "is_correct": false
            }
        ]
    }
}